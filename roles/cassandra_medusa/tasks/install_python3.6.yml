---
# tasks file for installing Python from an archive
- name: Include vars for os family
  include_vars:
    file: "{{ ansible_os_family }}.yml"

- name: Install packages required for build
  yum:
    name: "{{ build_packages }}"

- name: Download python if required
  local_action: get_url url="{{ python_download_url }}" dest=/tmp checksum="{{ python_sha256 }}"
  run_once: yes

- name: Ensure python_build_root dir exists
  file:
    name: "{{ python_build_root }}"
    state: directory

- name: Unarchive python to directory
  unarchive:
    src: "/tmp/{{ python_archive }}"
    dest: "{{ python_build_root }}"

- name: Install python 3.6 without flattening system Python
  shell: ./configure --enable-optimizations && make altinstall && touch /root/python36.success
  args:
    chdir: "{{ python_build_root }}/{{ python_directory }}"
    creates: /root/python36.success

- name: Verify setup
  command: "{{ python_exec_path }} -V"
  register: python_version
  failed_when: python_expected_version != python_version.stdout
  changed_when: python_expected_version != python_version.stdout

- name: Ensure pip3.6 is available
  shell: "{{ python_exec_path }} -m ensurepip --default-pip"
  args:
    creates: /usr/local/bin/pip3.6

- name: Get the python version the virtualenv is using
  shell: "{{ python_exec_path }} --version"
  register: python_version
  changed_when: python_version.rc != 0

- name: Do we have the expected python version?
  assert:
    that:
      - python_expected_version == python_version.stdout
